---
version: '3'

# In order to set configuration, please use a .env file in
# your compose project directory (the same directory as your
# docker-compose.yml), and set database options, application
# name, key, and other settings there.
# A list of available settings is available in .env.example
#
# The services should scale properly across a swarm cluster
# if the volumes are properly shared between cluster members.

services:

  app:
    # Uncomment to build a local copy of the image
    build: .
    # image: pixelfed
    env_file:
      - ./.env
    volumes:
      - "app-storage:/var/www/storage"
      - "app-php:/var/www/html"
    ports:
      - 9000
    networks:
      - external
      - internal
    depends_on:
      - db
    
  db:
    image: mysql:5.7
    networks:
      - internal
    environment:
      - MYSQL_DATABASE=pixelfed
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    volumes:
      - "db-data:/var/lib/mysql"

  redis:
    image: redis:4-alpine
    volumes:
      - "redis-data:/data"
    networks:
      - internal

  nginx:
    image: nginx:stable
    volumes:
      - ./contrib/nginx.template:/etc/nginx/conf.d/default.conf
      - "app-php:/var/www/html"
    ports:
      - "80:80"
    networks:
      - external
    depends_on:
      - app
    #command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

# Adjust your volume data in order to store data where you wish
volumes:
  redis-data:
  db-data:
  app-storage:
  app-php:

networks:
  internal:
    internal: true
  external:
    driver: bridge
